[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "apps-iam-service"
version = "0.1.0"
description = ""
authors = ["Nikica"]
package-mode = false

[tool.poetry.dependencies]


[tool.poetry.group.api]
optional = true

[tool.poetry.group.api.dependencies]
fastapi = ">=0.115.8,<0.116.0"
uvicorn = ">=0.18.0,<0.19.0"

[tool.poetry.group.lambda]
optional = true

[tool.poetry.group.lambda.dependencies]

[tool.poetry.group.dev]

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pre-commit = "^4.1.0"
python = "~3.12"
sqlalchemy = "^2.0.38"
psycopg2 = "^2.9.10"

[tool.ruff]
line-length = 120
show-fixes = true
exclude = [
  ".git",
]

[tool.ruff.lint]
select = [
  "F",        # pyflakes
  "E",        # pycodestyle errors
  "W",        # pycodestyle warnings
  "I",        # isort
  "C4",       # flake8-comprehensions
  "B",        # flake8-bugbear
  "T20",      # flake8-print
  "ASYNC",    # asyncio
  "TID252",   # flake8-tidy-imports, prefer absolute imports over relative imports from parent modules
]
ignore = [
  "B904",
  "B008",
]
fixable = ["ALL"]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.params.Depends", "fastapi.Query", "fastapi.params.Query"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false

[tool.mypy]
ignore_missing_imports = true
allow_redefinition = false
check_untyped_defs = true
ignore_errors = false
implicit_reexport = false
local_partial_types = true
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_configs = true
warn_no_return = true
